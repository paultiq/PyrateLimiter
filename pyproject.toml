[project]
name = "pyrate-limiter"
version = "0.0.0"
description = "Python Rate-Limiter using Leaky-Bucket Algorithm"
authors = [{ name = "vutr", email = "me@vutr.io" }]
requires-python = ">=3.9"
readme = "README.md"
license = "MIT"
keywords = [
    "rate",
    "rate-limiter",
    "rate_limiter",
    "ratelimiter",
    "leaky-bucket",
    "ratelimit",
    "ratelimiting",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[project.optional-dependencies]
all = [
    "filelock>=3.0",
    "redis>=5.0.0,<6",
    "psycopg[pool]>=3.1.18,<4",
]
docs = [
    "furo>=2022.3.4,<2023",
    "myst-parser>=0.17",
    "sphinx>=4.3.0,<5",
    "sphinx-autodoc-typehints~=1.17",
    "sphinx-copybutton>=0.5",
    "sphinxcontrib-apidoc>=0.3,<0.4",
]

[project.urls]
Homepage = "https://github.com/vutran1710/PyrateLimiter"
Repository = "https://github.com/vutran1710/PyrateLimiter"
Documentation = "https://pyrate-limiter.readthedocs.io"

[dependency-groups]
dev = [
    "dunamai",
    "coverage==6",
    "flake8_polyfill>=1.0.2,<2",
    "nox~=2025.5",
    "nox-poetry>=1.0",
    "pre-commit>=2.17.0,<3",
    "psycopg[pool]>=3.1.18,<4",
    "pytest>=8.3",
    "pytest-asyncio>=0.24",
    "pytest-cov>=4.1.0,<5",
    "pytest-xdist>=2.5.0,<3",
    "schedule>=1.1.0,<2",
]


[tool.black]
line-length = 120

[tool.coverage.run]
branch = true
source = ['pyrate_limiter']

[tool.coverage.report]
exclude_lines = [
    "except ImportError:", # Used for missing optional dependencies
]

[tool.coverage.xml]
output = 'test-reports/coverage.xml'

[tool.ipdb]
context = 7

[build-system]
requires = ["uv_build>=0.8.3,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "pyrate_limiter"
module-root = ""
source-include = [
    "LICENSE",
    "CHANGELOG.md",
    "examples",
    "pyrate_limiter",
    "tests",
]

[pytest]
asyncio_default_fixture_loop_scope = function
